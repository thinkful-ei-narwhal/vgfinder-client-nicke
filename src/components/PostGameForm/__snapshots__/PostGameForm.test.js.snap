// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Post game component renders the complete form 1`] = `
<form
  className=""
  onSubmit={[Function]}
>
  <div
    role="alert"
  />
  <div
    className="title"
  >
    <label
      htmlFor="PostGameForm_title"
    >
      Title
    </label>
    <input
      id="PostGameForm_title"
      name="title"
      required={true}
    />
  </div>
  <div
    className="description"
  >
    <label
      htmlFor="PostGameForm_description"
    >
      Description
    </label>
    <textarea
      id="PostGameForm_description"
      name="description"
      required={true}
    />
  </div>
  <div
    className="genre"
  >
    <label
      htmlFor="PostGameForm_genre"
    >
      Genre
    </label>
    <select
      id="PostGameForm_genre"
      name="genre"
      required={true}
    >
      <option
        value="Action"
      >
        Action
      </option>
      <option
        value="Adventure"
      >
        Adventure
      </option>
      <option
        value="Simulation"
      >
        Simulation
      </option>
      <option
        value="Strategy"
      >
        Strategy
      </option>
      <option
        value="RPG"
      >
        RPG
      </option>
      <option
        value="Sports"
      >
        Sports
      </option>
      <option
        value="Horror"
      >
        Horror
      </option>
      <option
        value="FPS"
      >
        FPS
      </option>
      <option
        value="Third Person"
      >
        Third Person
      </option>
      <option
        value="Point And Click"
      >
        Point And Click
      </option>
      <option
        value="Mystery"
      >
        Mystery
      </option>
      <option
        value="RTS"
      >
        RTS
      </option>
      <option
        value="Puzzle"
      >
        Puzzle
      </option>
    </select>
  </div>
  <div
    className="rating"
  >
    <label
      htmlFor="PostGameForm_rating"
    >
      Rating
    </label>
    <Slider
      className="slider"
      handleLabel=""
      id="PostGameForm_rating"
      labels={Object {}}
      max={10}
      min={0}
      name="rating"
      onChange={[Function]}
      orientation="horizontal"
      reverse={false}
      step={1}
      tooltip={true}
      value={0}
    />
  </div>
  <div
    className="YearNavigation release_date"
  >
    <label
      htmlFor="PostGameForm_release_date"
    >
      Release Date
    </label>
    <br />
    <t
      canChangeMonth={true}
      captionElement={[Function]}
      classNames={
        Object {
          "body": "DayPicker-Body",
          "caption": "DayPicker-Caption",
          "container": "DayPicker",
          "day": "DayPicker-Day",
          "disabled": "disabled",
          "footer": "DayPicker-Footer",
          "interactionDisabled": "DayPicker--interactionDisabled",
          "month": "DayPicker-Month",
          "months": "DayPicker-Months",
          "navBar": "DayPicker-NavBar",
          "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
          "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
          "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
          "outside": "outside",
          "selected": "selected",
          "today": "today",
          "todayButton": "DayPicker-TodayButton",
          "week": "DayPicker-Week",
          "weekNumber": "DayPicker-WeekNumber",
          "weekday": "DayPicker-Weekday",
          "weekdays": "DayPicker-Weekdays",
          "weekdaysRow": "DayPicker-WeekdaysRow",
          "wrapper": "DayPicker-wrapper",
        }
      }
      enableOutsideDaysClick={true}
      fixedWeeks={false}
      fromMonth={1970-12-01T05:00:00.000Z}
      id="PostGameForm_release_date"
      labels={
        Object {
          "nextMonth": "Next Month",
          "previousMonth": "Previous Month",
        }
      }
      locale="en"
      localeUtils={
        Object {
          "default": Object {
            "formatDay": [Function],
            "formatMonthTitle": [Function],
            "formatWeekdayLong": [Function],
            "formatWeekdayShort": [Function],
            "getFirstDayOfWeek": [Function],
            "getMonths": [Function],
          },
          "formatDay": [Function],
          "formatMonthTitle": [Function],
          "formatWeekdayLong": [Function],
          "formatWeekdayShort": [Function],
          "getFirstDayOfWeek": [Function],
          "getMonths": [Function],
        }
      }
      name="release_date"
      navbarElement={
        <t
          classNames={
            Object {
              "body": "DayPicker-Body",
              "caption": "DayPicker-Caption",
              "container": "DayPicker",
              "day": "DayPicker-Day",
              "disabled": "disabled",
              "footer": "DayPicker-Footer",
              "interactionDisabled": "DayPicker--interactionDisabled",
              "month": "DayPicker-Month",
              "months": "DayPicker-Months",
              "navBar": "DayPicker-NavBar",
              "navButtonInteractionDisabled": "DayPicker-NavButton--interactionDisabled",
              "navButtonNext": "DayPicker-NavButton DayPicker-NavButton--next",
              "navButtonPrev": "DayPicker-NavButton DayPicker-NavButton--prev",
              "outside": "outside",
              "selected": "selected",
              "today": "today",
              "todayButton": "DayPicker-TodayButton",
              "week": "DayPicker-Week",
              "weekNumber": "DayPicker-WeekNumber",
              "weekday": "DayPicker-Weekday",
              "weekdays": "DayPicker-Weekdays",
              "weekdaysRow": "DayPicker-WeekdaysRow",
              "wrapper": "DayPicker-wrapper",
            }
          }
          dir="ltr"
          labels={
            Object {
              "nextMonth": "Next Month",
              "previousMonth": "Previous Month",
            }
          }
          showNextButton={true}
          showPreviousButton={true}
        />
      }
      numberOfMonths={1}
      onDayClick={[Function]}
      pagedNavigation={false}
      renderDay={[Function]}
      renderWeek={[Function]}
      reverseMonths={false}
      selectedDays={null}
      showOutsideDays={false}
      showWeekDays={true}
      showWeekNumbers={false}
      tabIndex={0}
      toMonth={2020-01-01T05:00:00.000Z}
      weekdayElement={<t />}
    />
  </div>
  <div
    className="developer"
  >
    <label
      htmlFor="PostGameForm_developer"
    >
      Developer
    </label>
    <input
      id="PostGameForm_developer"
      name="developer"
      required={true}
    />
  </div>
  <div
    className="trailer_url"
  >
    <label
      htmlFor="PostGameForm_trailer_url"
    >
      Trailer Youtube Url
    </label>
    <input
      id="PostGameForm_trailer_url"
      name="trailer_url"
      required={true}
    />
  </div>
  <div
    className="image_url_box_art"
  >
    <label
      htmlFor="PostGameForm_image_url_box_art"
    >
      Cover Art
    </label>
    <input
      id="PostGameForm_image_url_box_art"
      name="image_url_box_art"
      required={true}
    />
  </div>
  <div
    className="image_url_two"
  >
    <label
      htmlFor="PostGameForm_image_url_two"
    >
      Screen Shot 1
    </label>
    <input
      id="PostGameForm_image_url_two"
      name="image_url_two"
    />
  </div>
  <div
    className="image_url_three"
  >
    <label
      htmlFor="PostGameForm_image_url_three"
    >
      Screen Shot 2
    </label>
    <input
      id="PostGameForm_image_url_three"
      name="image_url_three"
    />
  </div>
  <div
    className="image_url_four"
  >
    <label
      htmlFor="PostGameForm_image_url_four"
    >
      Screen Shot 3
    </label>
    <input
      id="PostGameForm_image_url_four"
      name="image_url_four"
    />
  </div>
  <div
    className="image_url_five"
  >
    <label
      htmlFor="PostGameForm_image_url_five"
    >
      Screen Shot 4
    </label>
    <input
      id="PostGameForm_image_url_five"
      name="image_url_five"
    />
  </div>
  <button
    type="submit"
  >
    Submit Game
  </button>
</form>
`;
